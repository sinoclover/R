library(nnet)
library(splines)
# 写入自变量及因变量
data_color <- read.csv('F://Coding/R/MNL/data/data_color.csv')
print(data_color)
# 进行线性回归并引入自然三次样条
ns <- lm(pj ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data=data_color)
print(ns)
coef(ns)
summary(ns)
# 数据节点内的全色彩空间数据构造
newdata <- expand.grid(l = seq(min(data_color$l), max(data_color$l), 0.1),
a = seq(min(data_color$a), max(data_color$a), 0.2),
b = seq(min(data_color$b), max(data_color$b), 0.2))
print(newdata)
class(newdata)
# 根据获得的系数进行色彩效用推广
# 记录各个样条基函数并计算各效用值
L <- ns(newdata$l, df=4)
L <- data.frame(L)
print(L)
ul = coef(ns)[2] * L$X1 + coef(ns)[3] * L$X2 + coef(ns)[4] * L$X3 + coef(ns)[5] * L$X4
A <- ns(newdata$a, df=4)
A <- data.frame(A)
print(A)
ua = coef(ns)[6] * A$X1 + coef(ns)[7] * A$X2 + coef(ns)[8] * A$X3 + coef(ns)[9] * A$X4
B <- ns(newdata$b, df=4)
B <- data.frame(B)
print(B)
ub = coef(ns)[10] * B$X1 + coef(ns)[11] * B$X2 + coef(ns)[12] * B$X3 + coef(ns)[13] * B$X4
u = ul+ua+ub
print(u)
newdata$u <- u
print(newdata)
# 进行线性回归并引入自然三次样条
ns <- lm(pj ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data=data_color)
print(ns)
coef(ns)
library(nnet)
library(splines)
# 写入自变量及因变量
data_color <- read.csv('F://Coding/R/MNL/p_color.xlsx')
# 写入自变量及因变量
data_color <- read.csv('F://Coding/R/MNL/p_color.csv')
print(data_color)
# 进行线性回归并引入自然三次样条
ns <- lm(pj ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data=data_color)
# 进行线性回归并引入自然三次样条
ns <- lm(ln ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data=data_color)
print(ns)
coef(ns)
summary(ns)
library(nnet)
library(splines)
# 写入自变量及因变量
data_color <- read.csv('F://Coding/R/MNL/p_color.csv')
library(nnet)
library(splines)
# 写入自变量及因变量
data_color <- read.csv('F://Coding/R/MNL/p_color.csv')
print(data_color)
# 进行线性回归并引入自然三次样条
ns <- lm(ln ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data=data_color)
print(ns)
coef(ns)
summary(ns)
# 写入自变量及因变量
data_color <- read.csv('F://Coding/R/MNL/p_color.csv')
print(data_color)
# 进行线性回归并引入自然三次样条
ns <- lm(ln1 ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data=data_color)
print(ns)
coef(ns)
summary(ns)
# 进行线性回归并引入自然三次样条
ns <- lm(ln2 ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data=data_color)
print(ns)
coef(ns)
summary(ns)
library(nnet)
library(splines)
# 写入自变量及因变量
data_color <- read.csv('F://Coding/R/MNL/p_color.csv')
print(data_color)
# 进行线性回归并引入自然三次样条
ns <- lm(ln3 ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data=data_color)
print(ns)
coef(ns)
summary(ns)
summary(ns)
# 数据节点内的全色彩空间数据构造
newdata <- expand.grid(l = seq(min(data_color$l), max(data_color$l), 0.1),
a = seq(min(data_color$a), max(data_color$a), 0.1),
b = seq(min(data_color$b), max(data_color$b), 0.1))
print(newdata)
class(newdata)
# 根据获得的系数进行色彩效用推广
# 记录各个样条基函数并计算各效用值
L <- ns(newdata$l, df=4)
# 根据获得的系数进行色彩效用推广
# 记录各个样条基函数并计算各效用值
L <- ns(newdata$l, df=4)
L <- data.frame(L)
print(L)
ul = coef(ns)[2] * L$X1 + coef(ns)[3] * L$X2 + coef(ns)[4] * L$X3 + coef(ns)[5] * L$X4
A <- ns(newdata$a, df=4)
A <- data.frame(A)
print(A)
ua = coef(ns)[6] * A$X1 + coef(ns)[7] * A$X2 + coef(ns)[8] * A$X3 + coef(ns)[9] * A$X4
B <- ns(newdata$b, df=4)
B <- data.frame(B)
print(B)
ub = coef(ns)[10] * B$X1 + coef(ns)[11] * B$X2 + coef(ns)[12] * B$X3 + coef(ns)[13] * B$X4
u = ul+ua+ub
print(u)
newdata$u <- u
print(newdata)
write.csv(newdata, file = 'F://Coding/R/MNL/data/data_color_new3.csv', row.names = FALSE)
library(nnet)
library(splines)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/1.csv')
print(rawdata)
ns <- multinom(choice ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data = rawdata)
print(ns)
coef(ns)
summary(ns)
# 数据节点内的全色彩空间数据构造
newdata <- expand.grid(l = seq(min(rawdata$l), max(rawdata$l), 0.1),
a = seq(min(rawdata$a), max(rawdata$a), 0.1),
b = seq(min(rawdata$b), max(rawdata$b), 0.1))
print(newdata)
print(newdata)
class(newdata)
# 根据获得的系数进行色彩效用推广
# 记录各个样条基函数并计算各效用值
L <- ns(newdata$l, df=4)
L <- data.frame(L)
print(L)
ul = coef(ns)[2] * L$X1 + coef(ns)[3] * L$X2 + coef(ns)[4] * L$X3 + coef(ns)[5] * L$X4
A <- ns(newdata$a, df=4)
A <- data.frame(A)
print(A)
ua = coef(ns)[6] * A$X1 + coef(ns)[7] * A$X2 + coef(ns)[8] * A$X3 + coef(ns)[9] * A$X4
B <- ns(newdata$b, df=4)
B <- data.frame(B)
print(B)
ub = coef(ns)[10] * B$X1 + coef(ns)[11] * B$X2 + coef(ns)[12] * B$X3 + coef(ns)[13] * B$X4
u = ul+ua+ub
print(u)
newdata$u <- u
print(newdata)
write.csv(newdata, file = 'F://Coding/R/MNL/data/data_color_p1.csv', row.names = FALSE)
write.csv(newdata, file = 'F://Coding/R/MNL/data_exam/data_color_p1.csv', row.names = FALSE)
library(nnet)
library(splines)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/1.csv')
print(rawdata)
ns <- multinom(choice ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data = rawdata)
print(ns)
coef(ns)
summary(ns)
library(nnet)
library(splines)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
ns <- multinom(choice ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data = rawdata)
print(ns)
coef(ns)
summary(ns)
# 数据节点内的全色彩空间数据构造
newdata <- expand.grid(l = seq(min(rawdata$l), max(rawdata$l), 0.1),
a = seq(min(rawdata$a), max(rawdata$a), 0.1),
b = seq(min(rawdata$b), max(rawdata$b), 0.1))
print(newdata)
class(newdata)
# 根据获得的系数进行色彩效用推广
# 记录各个样条基函数并计算各效用值
L <- ns(newdata$l, df=4)
print(newdata)
class(newdata)
# 根据获得的系数进行色彩效用推广
# 记录各个样条基函数并计算各效用值
L <- ns(newdata$l, df=4)
L <- data.frame(L)
print(L)
ul = coef(ns)[2] * L$X1 + coef(ns)[3] * L$X2 + coef(ns)[4] * L$X3 + coef(ns)[5] * L$X4
A <- ns(newdata$a, df=4)
A <- data.frame(A)
print(A)
ua = coef(ns)[6] * A$X1 + coef(ns)[7] * A$X2 + coef(ns)[8] * A$X3 + coef(ns)[9] * A$X4
B <- ns(newdata$b, df=4)
B <- data.frame(B)
print(B)
ub = coef(ns)[10] * B$X1 + coef(ns)[11] * B$X2 + coef(ns)[12] * B$X3 + coef(ns)[13] * B$X4
u = ul+ua+ub
print(u)
newdata$u <- u
print(newdata)
write.csv(newdata, file = 'F://Coding/R/MNL/data_exam/data_color_p2.csv', row.names = FALSE)
library(nnet)
library(splines)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
ns <- multinom(choice ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data = rawdata)
print(ns)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/1.csv')
print(rawdata)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
ns <- multinom(choice ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data = rawdata)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
library(nnet)
library(splines)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
library(nnet)
library(splines)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/1.csv')
print(rawdata)
library(nnet)
library(splines)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
ns <- multinom(choice ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data = rawdata)
print(ns)
coef(ns)
summary(ns)
# 数据节点内的全色彩空间数据构造
newdata <- expand.grid(l = seq(min(rawdata$l), max(rawdata$l), 0.1),
a = seq(min(rawdata$a), max(rawdata$a), 0.1),
b = seq(min(rawdata$b), max(rawdata$b), 0.1))
print(newdata)
class(newdata)
# 根据获得的系数进行色彩效用推广
# 记录各个样条基函数并计算各效用值
L <- ns(newdata$l, df=4)
L <- data.frame(L)
print(L)
ul = coef(ns)[2] * L$X1 + coef(ns)[3] * L$X2 + coef(ns)[4] * L$X3 + coef(ns)[5] * L$X4
A <- ns(newdata$a, df=4)
A <- data.frame(A)
print(A)
ua = coef(ns)[6] * A$X1 + coef(ns)[7] * A$X2 + coef(ns)[8] * A$X3 + coef(ns)[9] * A$X4
B <- ns(newdata$b, df=4)
B <- data.frame(B)
print(B)
ub = coef(ns)[10] * B$X1 + coef(ns)[11] * B$X2 + coef(ns)[12] * B$X3 + coef(ns)[13] * B$X4
u = ul+ua+ub
print(u)
newdata$u <- u
print(newdata)
write.csv(newdata, file = 'F://Coding/R/MNL/data_exam/data_color_p2.csv', row.names = FALSE)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
truedata <- rawdata$choice=TRUE
print(rawdata)
truedata <- rawdata$choice=TRUE
truedata <- subset(rawdata, choice==TRUE)
print(truedata)
library(nnet)
library(splines)
rawdata <- read.csv('F://Coding/R/MNL/data_exam/2.csv')
print(rawdata)
truedata <- subset(rawdata, choice==TRUE)
print(truedata)
ns <- multinom(choice ~ ns(l, df=4)+ns(a, df=4)+ns(b, df=4), data = rawdata)
print(ns)
coef(ns)
summary(ns)
# 数据节点内的全色彩空间数据构造
newdata <- expand.grid(l = seq(min(truedata$l), max(truedata$l), 0.1),
a = seq(min(truedata$a), max(truedata$a), 0.1),
b = seq(min(truedata$b), max(truedata$b), 0.1))
print(newdata)
class(newdata)
# 根据获得的系数进行色彩效用推广
# 记录各个样条基函数并计算各效用值
L <- ns(newdata$l, df=4)
L <- data.frame(L)
print(L)
ul = coef(ns)[2] * L$X1 + coef(ns)[3] * L$X2 + coef(ns)[4] * L$X3 + coef(ns)[5] * L$X4
A <- ns(newdata$a, df=4)
A <- data.frame(A)
print(A)
ua = coef(ns)[6] * A$X1 + coef(ns)[7] * A$X2 + coef(ns)[8] * A$X3 + coef(ns)[9] * A$X4
B <- ns(newdata$b, df=4)
B <- data.frame(B)
print(B)
ub = coef(ns)[10] * B$X1 + coef(ns)[11] * B$X2 + coef(ns)[12] * B$X3 + coef(ns)[13] * B$X4
u = ul+ua+ub
print(u)
newdata$u <- u
print(newdata)
write.csv(newdata, file = 'F://Coding/R/MNL/data_exam/data_color_p2.csv', row.names = FALSE)
print(truedata)
